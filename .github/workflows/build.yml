name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env:
      INSTALL_PREFIX: /tmp/openssl
      OPENSSL_ARTIFACT_PATH: /openssl.tar.xz
    permissions: write-all
    runs-on: ubuntu-latest
    container: ghcr.io/all-space-matei/cmake-build

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openssl/openssl
          ref: OpenSSL_1_1_1o

      - name: Configure
        run: >-
            ./Configure linux-aarch64
            threads
            --cross-compile-prefix=${{ env.CROSS_COMPILE_PREFIX }}
            --prefix=${{ env.INSTALL_PREFIX }}
            --openssldir=${{ env.OPENSSLDIR }}
        env:
          CROSS_COMPILE_PREFIX: /usr/local/tools/ARM/a53/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          OPENSSLDIR: /usr/local/lib/ARM/a53/openssl

      - name: Build
        run: make -j $(nproc) --quiet

      - name: Install
        run: make install_sw # 'install_sw' doesn't include doc, unlike 'install'

      - name: Archive
        working-directory: ${{ env.INSTALL_PREFIX }}
        run: tar -zcvf ${{ env.OPENSSL_ARTIFACT_PATH }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: openssl-arm
          path: ${{ env.OPENSSL_ARTIFACT_PATH }}

      - name: Upload release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          files: ${{ env.OPENSSL_ARTIFACT_PATH }}
